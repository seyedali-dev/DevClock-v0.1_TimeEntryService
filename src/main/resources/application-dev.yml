#file: noinspection HttpUrlsUsage

spring:
  #enable .env.properties file
  config:
    import: optional:classpath:.env.properties

--- # DB
spring:
  datasource:
    url: ${DB_URL:jdbc:h2:mem:testdb}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:sa}
    driverClassName: ${DB_DRIVER_CLASS_NAME:org.h2.Driver}
  jpa:
    hibernate:
      ddl-auto: update
    generate-ddl: true
    properties:
      hibernate:
        dialect: ${DB_HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}
  sql:
    init:
      mode: always
  h2:
    console:
      enabled: true

--- # Eureka client
eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://${EUREKA_SERVER_HOST:localhost}:8761/eureka

--- # Keycloak
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_SERVER_HOST:localhost}:8080/realms/DevVault-v2.0

--- # Redis
spring:
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  cache:
    type: redis
    cache-names:
      - time-entry-cache
    redis:
      cache-null-values: true
      time-to-live: ${REDIS_CACHE_TIME_TO_LIVE:600000} # 1 hour

--- # Swagger
springdoc:
  swagger-ui:
    oauth:
      client-id: ${KEYCLOAK_CLIENT_ID}
      client-secret: ${KEYCLOAK_CLIENT_SECRET}

--- # Custom Variables
authentication:
  service:
    user-persistence-controller:
      base-url: http://${AUTHENTICATION_SERVICE_HANDLE_USER_BASE_URL:localhost:8081}/keycloak-user
      handle-user-url: /handle-user

--- # Kafka
spring:
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_SERVER_HOST:localhost}:${KAFKA_SERVER_PORT:9092}
      group-id: project_group_timeentry
      auto-offset-reset: earliest

      #configure deserialize classes for key & value pair
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: ProjectEvent:com.seyed.ali.timeentryservice.model.payload.ProjectDTO

        #custom
    topic:
      name: project_name