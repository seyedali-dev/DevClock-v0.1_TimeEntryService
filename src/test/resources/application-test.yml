spring:
  application:
    name: Time-Entry-Service
  #enable .env.properties file
  config:
    import: optional:classpath:.env.properties

--- # DB
spring:
  datasource:
    url: jdbc:h2:mem:order
    username: sa
    password: password
    driverClassName: org.h2.Driver

--- # Eureka client configuration
eureka:
  client:
    enabled: false # for testing purposes

--- # Keycloak configuration: will be same as main
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_SERVER_HOST:localhost}:8080/realms/DevVault-v2.0

--- # Swagger
springdoc:
  swagger-ui:
    oauth:
      client-id: ${KEYCLOAK_CLIENT_ID} # fill this data otherwise `mvn clean install` won't succeed.
      client-secret: ${KEYCLOAK_CLIENT_SECRET} # fill this data otherwise `mvn clean install` won't succeed.

--- # Custom Variables
authentication:
  service:
    user-persistence-controller:
      base-url: http://${AUTHENTICATION_SERVICE_HANDLE_USER_BASE_URL:localhost:8081}/keycloak-user
      handle-user-url: /handle-user

--- # Kafka
spring:
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_SERVER_HOST_and_PORT:localhost:9092}
      group-id: project_group_timeentry
      auto-offset-reset: earliest

      #configure deserialize classes for key & value pair
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: ProjectEvent:com.seyed.ali.timeentryservice.model.payload.ProjectDTO

        #custom
    topic:
      name: project_name